"use client";

"use client";

import { useRef, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Loader2 } from "lucide-react";
import Link from "next/link";
import { useTranscribeStore } from "@/lib/stores/useTranscribeStore";
import { useTranscribeApi } from "@/lib/hooks/useTranscribeApi";
import { FileUpload } from "@/components/transcribe/FileUpload";
import { UrlInput } from "@/components/transcribe/UrlInput";
import { TranscriptionResult } from "@/components/transcribe/TranscriptionResult";

export default function TranscribePage() {
  const {
    file,
    url,
    transcription,
    processedTranscription,
    isLoading,
    isProcessing,
    error,
    setFile,
    setUrl,
  } = useTranscribeStore();
  const { handleSubmit, handlePostProcess } = useTranscribeApi();
  const resultCardRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if ((transcription || error) && resultCardRef.current) {
      resultCardRef.current.scrollIntoView({ behavior: "smooth", block: "center" });
    }
  }, [transcription, error]);

  return (
    <div className="p-6 min-h-screen flex flex-col items-center">
      <div className="w-full max-w-4xl">
        <div className="flex justify-between items-center mb-6">
          <h1 className="text-3xl text-gray-800 dark:text-white">Transcribe Audio</h1>
          <div className="flex gap-2">
            <Link href="/history">
              <Button variant="outline">View History</Button>
            </Link>
            <Link href="/">
              <Button>Back to Chatbot</Button>
            </Link>
          </div>
        </div>
        <Card className="w-full">
          <CardHeader>
            <CardTitle>Upload Audio File or Provide URL</CardTitle>
          </CardHeader>
          <CardContent className="flex flex-col gap-6">
            <FileUpload file={file} onFileChange={setFile} />
            <UrlInput url={url} onUrlChange={setUrl} />
            <div className="mt-6 flex justify-center">
              <Button onClick={handleSubmit} disabled={isLoading || (!file && !url)}>
                {isLoading && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
                {isLoading ? "Transcribing..." : "Transcribe"}
              </Button>
            </div>
          </CardContent>
        </Card>
        <div className="w-full max-w-4xl mt-4 text-center">
          <p className="text-xs text-gray-500 dark:text-gray-400">
            Please note: This transcription is generated by an AI and may contain inaccuracies. Names and technical terms can sometimes be misinterpreted.
          </p>
        </div>
        <div ref={resultCardRef}>
          <TranscriptionResult
            transcription={transcription}
            processedTranscription={processedTranscription}
            isProcessing={isProcessing}
            onPostProcess={handlePostProcess}
          />
        </div>
        <div className="h-96" />
      </div>
    </div>
  );
}